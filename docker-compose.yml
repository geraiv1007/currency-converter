services:
    app:
        build:
            context: .
            dockerfile: ./Dockerfile
        env_file: .env
        networks:
            - backend-network
        depends_on:
            db:
                condition: service_healthy
            cache:
                condition: service_healthy
            migration:
                condition: service_completed_successfully
        restart: unless-stopped
        ports:
            - '8000:8000'
        command: sh -c "poetry run gunicorn main:app --workers 4 --worker-class uvicorn_worker.UvicornWorker --bind 0.0.0.0:8000"
    migration:
        build:
            context: .
            dockerfile: ./Dockerfile
        env_file: .env
        networks:
            - backend-network
        depends_on:
            db:
                condition: service_healthy
        command: sh -c "poetry run alembic upgrade head"
    db:
        image: postgres:15
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=homedb1007
            - POSTGRES_DB=homedb
        volumes:
            - type: volume
              source: pg-data
              target: /var/lib/postgresql/data/
        networks:
            - backend-network
        ports:
            - '5435:5432'
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "postgres"]
            interval: 5s
            timeout: 5s
            retries: 15
        restart: unless-stopped
    cache:
        image: redis/redis-stack-server:latest
        env_file: .env
        volumes:
            - type: volume
              source: cache-data
              target: /var/lib/redis/data/
        networks:
            - backend-network
        ports:
          - '6379:6379'
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 5s
            retries: 10
        restart: unless-stopped
        
    
volumes:
    pg-data:
    cache-data:

networks:
    backend-network:
        driver: bridge